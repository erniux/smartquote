name: smartquote
services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - smartquote_net
    ports:
      - "5432:5432"

 
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    #env_file: .env
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_DB}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    command: ["/scripts/init_backend.sh"]
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./media_data:/app/media
      - ./static_data:/app/staticfiles
      - ./docker/scripts:/scripts
    networks:
      - smartquote_net

    

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # evita conflictos con node_modules local
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
    depends_on:
      - backend
    networks:
      - smartquote_net

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - smartquote_net
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:11434/api/tags | grep -q 'llama3'"]
      interval: 60s
      timeout: 10s
      retries: 5

  ai_agent:
    build:
      context: .
      dockerfile: Dockerfile.ai_agent
    container_name: ai_agent
    env_file: .env
    environment:
      PROJECT_BASE_PATH: /workspace
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://ollama:11434}
    depends_on:
      - backend
      - ollama
    volumes:
      - .:/workspace
    working_dir: /workspace
    networks:
      - smartquote_net
    command: >
      sh -c "
        echo '🕓 Esperando a Ollama...';
        until curl -s http://ollama:11434/api/tags > /dev/null; do
          sleep 3;
          echo '🔁 Aún no responde...';
        done;
        echo '✅ Ollama listo, iniciando agente...';
      "
    healthcheck:
      test: ["CMD-SHELL", "ollama list | grep mistral || ollama pull mistral"]
      interval: 60s
      timeout: 20s
      retries: 3

  bdd:
    build:
      context: .
      dockerfile: Dockerfile.bdd
    container_name: bdd-tests
    depends_on:
      - backend
    volumes:
      - .:/tests
    environment:
      - PYTHONUNBUFFERED=1
    command: pytest -v --gherkin-terminal-reporter

networks:
  smartquote_net:

volumes:
  pgdata:
  media_data:
  static_data:
  ollama_data:
